---
- name: Setup
  hosts: localhost
  connection: local
  gather_facts: no
  become: no
  tasks:
    # Create a vault with `ovirt_password` variable which store your
    # oVirt/RHV user's password, and include that yaml file with variable:
    - include_vars: ovirt_password.yml
    - name: Check for required variables
      fail:
        msg: "Required variable not defined: {{ item }}"
      when: item not in vars
      with_items:
        - ovirt_username
        - ovirt_password
        - ovirt_url

- name: Provision VM
  hosts: localhost
  gather_facts: no
  connection: local
  tasks:
    - block: 
        - name: Obtain SSO token with using username/password credentials
          ovirt_auth:
            url: "{{ ovirt_url }}"
            username: "{{ ovirt_username }}"
            password: "{{ ovirt_password }}"
            ca_file: ca.crt

        - name: Create the VM
          ovirt_vms:
            auth: "{{ ovirt_auth }}"
            name: windows-server
            state: present
            template: win7-x64_template
            cluster: Default
            memory: 4GiB
            high_availability: true
            sysprep:
              host_name: windows-server.home.nicksabine.com
              user_name: admin
              root_password: super_password
          async: 180
          register: provisioning
    
        - name: Debug
          debug:
            var: provisioning
    
        - name: Check on provisioning
          async_status:
            jid: "{{ provisioning.ansible_job_id }}"
          register: provisioning_job
          until: "{{ provisioning_job.finished }}"
          retries: 30
    
        - name: Debug
          debug:
            var: provisioning_job
         
        - name: Tag VM - Demo
          ovirt_tags:
            name: ansible-demo
            auth: "{{ ovirt_auth }}"
            vms:
              - "{{ provisioning_job.vm.name }}"
  
        - name: Tag VM - windows
          ovirt_tags:
            name: windows-server
            auth: "{{ ovirt_auth }}"
            vms:
              - "{{ provisioning_job.vm.name }}"
  
        - name: Get provisioned VM Facts
          ovirt_vms_facts:
            pattern: name=windows-server
            auth: "{{ ovirt_auth }}"
          register: running_vm
  
        - name: Debug
          debug:
              var: running_vm
  
  #        - name: Wait for provisioned VM
  #          wait_for:
  #            port: 22
  #            host: "10.61.0.142"
  #            delay: 10
      
      always:
        - name: Always revoke the SSO token
          ovirt_auth:
            state: absent
            ovirt_auth: "{{ ovirt_auth }}"
